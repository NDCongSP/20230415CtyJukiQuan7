// Created using LayerGen 3.5

using System;
using System.Data.SqlTypes;
using System.IO;
using System.Runtime.Serialization.Formatters.Binary;
using System.Collections.Generic;
using System.Data;
using MySql.Data.MySqlClient;
using MySql.Data.Types;

namespace DataLayer.Juki_giamsatthoigiankho
{
    [Serializable]
    public abstract partial class Bangnhapsolop
    {
        private string _maBarCodeSanPham;
        private string _tenSanPhamTiengViet;
        private string _tenSanPhamTiengAnh;
        private string _lopNhung;
        private int _tongLopNhung;
        private int _zircon01;
        private int _zircon02;
        private int _zircon03;
        private int _zircon04;
        private int _catL01;
        private int _catL02;
        private int _catL03;
        private int _catL04;
        private int _catL05;
        private int _catL06;
        private int _catL07;
        private int _catL08;
        private int _catL09;
        private int _sIRU;


        // isDirty flag determines whether data has been changed.
        private bool _layerGenIsDirty;
        protected string _connectionString;
        // _layerGenIsUpdate flag determines whether we need to do an update or an insert when saving.
        protected bool _layerGenIsUpdate;
        // isReadOnly determines if the row is in a read only state. This happens when partial
        // fields are loaded.
        private bool _isReadOnly;
        // concurrencyArray holds a serialized version of a database row to make concurrency work.
        private byte[] _concurrencyArray;
        private readonly BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions _concurrency;

        private readonly bool _layerGenUseStoredProcedures;
        protected const string LayerGenTableName = "bangnhapsolop";
        protected const string LayerGenTableNameDelimited = "`bangnhapsolop`";
        private const string LayerGenFieldNames = "`CatL01`,`CatL02`,`CatL03`,`CatL04`,`CatL05`,`CatL06`,`CatL07`,`CatL08`,`CatL09`,`LopNhung`,`MaBarCodeSanPham`,`SIRU`,`TenSanPhamTiengAnh`,`TenSanPhamTiengViet`,`TongLopNhung`,`Zircon01`,`Zircon02`,`Zircon03`,`Zircon04`";
        private const string LayerGenValueNames = "@val1,@val2,@val3,@val4,@val5,@val6,@val7,@val8,@val9,@val10,@val11,@val12,@val13,@val14,@val15,@val16,@val17,@val18,@val19";
        protected const string LayerGenPrimaryKey = "MaBarCodeSanPham";

        // nullDictionary is a dictionary for keeping track of which fields are null values.
        private readonly Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool> _nullDictionary;
        // internalNameDictionary is a dictionary for holding the names of the fields, as they are in SQL Server.
        private readonly Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string> _internalNameDictionary;
        private string _oldPrimaryKeyValue;


        public virtual string MaBarCodeSanPham
        {
            get { return _maBarCodeSanPham; }
            set { _maBarCodeSanPham = value; _layerGenIsDirty = true; if(value == null) SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham); else UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham); }
        }

        public virtual string TenSanPhamTiengViet
        {
            get { return _tenSanPhamTiengViet; }
            set { _tenSanPhamTiengViet = value; _layerGenIsDirty = true; if(value == null) SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet); else UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet); }
        }

        public virtual string TenSanPhamTiengAnh
        {
            get { return _tenSanPhamTiengAnh; }
            set { _tenSanPhamTiengAnh = value; _layerGenIsDirty = true; if(value == null) SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh); else UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh); }
        }

        public virtual string LopNhung
        {
            get { return _lopNhung; }
            set { _lopNhung = value; _layerGenIsDirty = true; if(value == null) SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung); else UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung); }
        }

        public virtual int TongLopNhung
        {
            get { return _tongLopNhung; }
            set { _tongLopNhung = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung); }
        }

        public virtual int Zircon01
        {
            get { return _zircon01; }
            set { _zircon01 = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01); }
        }

        public virtual int Zircon02
        {
            get { return _zircon02; }
            set { _zircon02 = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02); }
        }

        public virtual int Zircon03
        {
            get { return _zircon03; }
            set { _zircon03 = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03); }
        }

        public virtual int Zircon04
        {
            get { return _zircon04; }
            set { _zircon04 = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04); }
        }

        public virtual int CatL01
        {
            get { return _catL01; }
            set { _catL01 = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01); }
        }

        public virtual int CatL02
        {
            get { return _catL02; }
            set { _catL02 = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02); }
        }

        public virtual int CatL03
        {
            get { return _catL03; }
            set { _catL03 = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03); }
        }

        public virtual int CatL04
        {
            get { return _catL04; }
            set { _catL04 = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04); }
        }

        public virtual int CatL05
        {
            get { return _catL05; }
            set { _catL05 = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05); }
        }

        public virtual int CatL06
        {
            get { return _catL06; }
            set { _catL06 = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06); }
        }

        public virtual int CatL07
        {
            get { return _catL07; }
            set { _catL07 = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07); }
        }

        public virtual int CatL08
        {
            get { return _catL08; }
            set { _catL08 = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08); }
        }

        public virtual int CatL09
        {
            get { return _catL09; }
            set { _catL09 = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09); }
        }

        public virtual int SIRU
        {
            get { return _sIRU; }
            set { _sIRU = value; _layerGenIsDirty = true; UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU); }
        }

        

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class.
        /// </summary>
        protected Bangnhapsolop()
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since no row was loaded, this will be an insert and not an update.
            _layerGenIsUpdate = false;
            // Since no data was modified yet, set the dirty flag to false.
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            // Store the value of the primary key.
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since no row was loaded, this will be an insert and not an update.
            _layerGenIsUpdate = false;
            // Since no data was modified yet, set the dirty flag to false.
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            // Store the value of the primary key.
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, specifying
        /// if you want to use stored procedures or Sql text commands for data access.
        /// </summary>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since no row was loaded, this will be an insert and not an update.
            _layerGenIsUpdate = false;
            // Since no data was modified yet, set the dirty flag to false.
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            // Store the value of the primary key.
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, specifying
        /// if you want to use stored procedures or Sql text commands for data access.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since no row was loaded, this will be an insert and not an update.
            _layerGenIsUpdate = false;
            // Since no data was modified yet, set the dirty flag to false.
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            // Store the value of the primary key.
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key.
        /// </summary>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        protected Bangnhapsolop(string id)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since a row will be loaded, this will be an update and not an insert.
            _layerGenIsUpdate = true;
            // Since no data was modified yet, set the dirty flag to false.
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            // Load the row matching the given primary key.
            Get(id);
            // Store the value of the primary key.
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, string id)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since a row will be loaded, this will be an update and not an insert.
            _layerGenIsUpdate = true;
            // Since no data was modified yet, set the dirty flag to false.
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            // Load the row matching the given primary key.
            Get(id);
            // Store the value of the primary key.
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key. You can specify
        /// if you want to do all data access using stored procedures or Sql text.
        /// </summary>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(string id, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since a row will be loaded, this will be an update and not an insert.
            _layerGenIsUpdate = true;
            // Since no data was modified yet, set the dirty flag to false.
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            // Load the row matching the given primary key.
            Get(id);
            // Store the value of the primary key.
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key. You can specify
        /// if you want to do all data access using stored procedures or Sql text.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, string id, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since a row will be loaded, this will be an update and not an insert.
            _layerGenIsUpdate = true;
            // Since no data was modified yet, set the dirty flag to false.
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            // Load the row matching the given primary key.
            Get(id);
            // Store the value of the primary key.
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key and loading
        /// only the fields specified.
        /// </summary>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="fields">The list of <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields"/> to pull from the database.</param>
        protected Bangnhapsolop(string id, List<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields> fields)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since a row will be loaded, this will be an update and not an insert.
            _layerGenIsUpdate = true;
            // Since no data was modified yet, set the dirty flag to false.
            _layerGenIsDirty = false;
            // Since this is a partial load, set read only to true.
            _isReadOnly = fields != null && fields.Count != 0;
            // Set the connection string.
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            // Load the row matching the given primary key.
            Get(id, fields);
            // Store the value of the primary key.
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key and loading
        /// only the fields specified.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="fields">The list of <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields"/> to pull from the database.</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, string id, List<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields> fields)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since a row will be loaded, this will be an update and not an insert.
            _layerGenIsUpdate = true;
            // Since no data was modified yet, set the dirty flag to false.
            _layerGenIsDirty = false;
            // Since this is a partial load, set read only to true.
            _isReadOnly = fields != null && fields.Count != 0;
            // Set the connection string.
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            // Load the row matching the given primary key.
            Get(id, fields);
            // Store the value of the primary key.
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key and loading
        /// only the fields specified.
        /// </summary>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="fields">The list of <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields"/> to pull from the database.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(string id, List<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields> fields, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since a row will be loaded, this will be an update and not an insert.
            _layerGenIsUpdate = true;
            // Since no data was modified yet, set the dirty flag to false.
            _layerGenIsDirty = false;
            // Since this is a partial load, set read only to true.
            _isReadOnly = fields != null && fields.Count != 0;
            // Set the connection string.
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            // Load the row matching the given primary key.
            Get(id, fields);
            // Store the value of the primary key.
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key and loading
        /// only the fields specified.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="fields">The list of <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields"/> to pull from the database.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, string id, List<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields> fields, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since a row will be loaded, this will be an update and not an insert.
            _layerGenIsUpdate = true;
            // Since no data was modified yet, set the dirty flag to false.
            _layerGenIsDirty = false;
            // Since this is a partial load, set read only to true.
            _isReadOnly = fields != null && fields.Count != 0;
            // Set the connection string.
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            // Load the row matching the given primary key.
            Get(id, fields);
            // Store the value of the primary key.
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the given DataRow.
        /// </summary>
        /// <param name="dr">The DataRow that contains the data to be loaded into the instance.</param>
        protected Bangnhapsolop(DataRow dr)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since a row will be loaded, this will be an update and not an insert.
            _layerGenIsUpdate = true;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Fill(dr);
            _layerGenIsDirty = false;
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the given DataRow.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="dr">The DataRow that contains the data to be loaded into the instance.</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, DataRow dr)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since a row will be loaded, this will be an update and not an insert.
            _layerGenIsUpdate = true;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Fill(dr);
            _layerGenIsDirty = false;
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the given DataRow.
        /// </summary>
        /// <param name="dr">The DataRow that contains the data to be loaded into the instance.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(DataRow dr, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since a row will be loaded, this will be an update and not an insert.
            _layerGenIsUpdate = true;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Fill(dr);
            _layerGenIsDirty = false;
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the given DataRow.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="dr">The DataRow that contains the data to be loaded into the instance.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, DataRow dr, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            // By default, set concurrency to Ignore.
            _concurrency = BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore;
            // Since a row will be loaded, this will be an update and not an insert.
            _layerGenIsUpdate = true;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Fill(dr);
            _layerGenIsDirty = false;
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, explicitly enabling
        /// or disabling the concurrency option.
        /// </summary>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indication the level of concurrency.</param>
		protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            _concurrency = concurrency;
            _layerGenIsUpdate = false;
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            _oldPrimaryKeyValue = _maBarCodeSanPham;
       }

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, explicitly enabling
        /// or disabling the concurrency option.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indication the level of concurrency.</param>
		protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            _concurrency = concurrency;
            _layerGenIsUpdate = false;
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            _oldPrimaryKeyValue = _maBarCodeSanPham;
       }

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, explicitly enabling
        /// or disabling the concurrency option.
        /// </summary>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indication the level of concurrency.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
		protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            _concurrency = concurrency;
            _layerGenIsUpdate = false;
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            _oldPrimaryKeyValue = _maBarCodeSanPham;
       }

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, explicitly enabling
        /// or disabling the concurrency option.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indication the level of concurrency.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
		protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            _concurrency = concurrency;
            _layerGenIsUpdate = false;
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            // Set the connection string.
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            _oldPrimaryKeyValue = _maBarCodeSanPham;
       }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key and explicitly
        /// enabling or disabling the concurrency option.
        /// </summary>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indication the level of concurrency.</param>
        protected Bangnhapsolop(string id, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            _concurrency = concurrency;
            _layerGenIsUpdate = true;
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Get(id);
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key and explicitly
        /// enabling or disabling the concurrency option.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indication the level of concurrency.</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, string id, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            _concurrency = concurrency;
            _layerGenIsUpdate = true;
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Get(id);
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key and explicitly
        /// enabling or disabling the concurrency option.
        /// </summary>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indication the level of concurrency.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(string id, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            _concurrency = concurrency;
            _layerGenIsUpdate = true;
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Get(id);
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key and explicitly
        /// enabling or disabling the concurrency option.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indication the level of concurrency.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, string id, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            _concurrency = concurrency;
            _layerGenIsUpdate = true;
            _layerGenIsDirty = false;
            // Since all fields were loaded, this is not read only.
            _isReadOnly = false;
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Get(id);
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key and loading
        /// only the fields specified and explicitly enabling or disabling the
        /// concurrency option.
        /// </summary>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="fields">The list of <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields"/> to pull from the database.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indication the level of concurrency.</param>
        protected Bangnhapsolop(string id, List<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields> fields, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            _concurrency = concurrency;
            _layerGenIsUpdate = true;
            _layerGenIsDirty = false;
            // Since this is a partial load, set read only to true.
            _isReadOnly = fields != null && fields.Count != 0;
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Get(id, fields);
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key and loading
        /// only the fields specified and explicitly enabling or disabling the
        /// concurrency option.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="fields">The list of <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields"/> to pull from the database.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indication the level of concurrency.</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, string id, List<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields> fields, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            _concurrency = concurrency;
            _layerGenIsUpdate = true;
            _layerGenIsDirty = false;
            // Since this is a partial load, set read only to true.
            _isReadOnly = fields != null && fields.Count != 0;
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Get(id, fields);
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key and loading
        /// only the fields specified and explicitly enabling or disabling the
        /// concurrency option.
        /// </summary>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="fields">The list of <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields"/> to pull from the database.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indication the level of concurrency.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(string id, List<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields> fields, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            _concurrency = concurrency;
            _layerGenIsUpdate = true;
            _layerGenIsDirty = false;
            // Since this is a partial load, set read only to true.
            _isReadOnly = fields != null && fields.Count != 0;
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Get(id, fields);
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the database that matches the given primary key and loading
        /// only the fields specified and explicitly enabling or disabling the
        /// concurrency option.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="id">The primary key of the row that gets loaded from the database.</param>
        /// <param name="fields">The list of <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields"/> to pull from the database.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indication the level of concurrency.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, string id, List<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields> fields, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            _concurrency = concurrency;
            _layerGenIsUpdate = true;
            _layerGenIsDirty = false;
            // Since this is a partial load, set read only to true.
            _isReadOnly = fields != null && fields.Count != 0;
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Get(id, fields);
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the given DataRow and explicitly enabling or disabling the
        /// concurrency option.
        /// </summary>
        /// <param name="dr">The DataRow that contains the data to be loaded into the instance.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indicating the level of concurrency.</param>
        protected Bangnhapsolop(DataRow dr, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            _concurrency = concurrency;
            _layerGenIsUpdate = true;
            _isReadOnly = false;
            // Since all fields were loaded, this is not read only.
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Fill(dr);
            _layerGenIsDirty = false;
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the given DataRow and explicitly enabling or disabling the
        /// concurrency option.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="dr">The DataRow that contains the data to be loaded into the instance.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indicating the level of concurrency.</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, DataRow dr, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency)
        {
            // By default, use Sql text instead of stored procedures.
            _layerGenUseStoredProcedures = false;
            _concurrency = concurrency;
            _layerGenIsUpdate = true;
            _isReadOnly = false;
            // Since all fields were loaded, this is not read only.
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Fill(dr);
            _layerGenIsDirty = false;
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the given DataRow and explicitly enabling or disabling the
        /// concurrency option.
        /// </summary>
        /// <param name="dr">The DataRow that contains the data to be loaded into the instance.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indicating the level of concurrency.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(DataRow dr, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            _concurrency = concurrency;
            _layerGenIsUpdate = true;
            _isReadOnly = false;
            // Since all fields were loaded, this is not read only.
            _connectionString = Universal.GetConnectionString();
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Fill(dr);
            _layerGenIsDirty = false;
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Bangnhapsolop"/> class, loading a
        /// row from the given DataRow and explicitly enabling or disabling the
        /// concurrency option.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database.</param>
        /// <param name="dr">The DataRow that contains the data to be loaded into the instance.</param>
        /// <param name="concurrency">A <see cref="BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions"/> value indicating the level of concurrency.</param>
        /// <param name="useStoredProcedures">If true, then all data access will be done using stored procedures. Otherwise, data access will be done using Sql text</param>
        protected Bangnhapsolop(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, DataRow dr, BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions concurrency, bool useStoredProcedures)
        {
            _layerGenUseStoredProcedures = useStoredProcedures;
            _concurrency = concurrency;
            _layerGenIsUpdate = true;
            _isReadOnly = false;
            // Since all fields were loaded, this is not read only.
            _connectionString = connectionString.ConnectionString;
            _nullDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, bool>();
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, true);
            _nullDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, true);

            _internalNameDictionary = new Dictionary<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields, string>();
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham, "MaBarCodeSanPham");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet, "TenSanPhamTiengViet");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh, "TenSanPhamTiengAnh");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung, "LopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung, "TongLopNhung");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01, "Zircon01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02, "Zircon02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03, "Zircon03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04, "Zircon04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01, "CatL01");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02, "CatL02");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03, "CatL03");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04, "CatL04");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05, "CatL05");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06, "CatL06");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07, "CatL07");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08, "CatL08");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09, "CatL09");
            _internalNameDictionary.Add(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU, "SIRU");

            Fill(dr);
            _layerGenIsDirty = false;
            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }

        /// <summary>
        /// Reads a DataRow and populates the properties from the DataRow.
        /// </summary>
        /// <param name="dr">The DataRow that contains the data to be loaded into the properties.</param>
        protected void Fill(DataRow dr)
        {
            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham);
                }
                else
                {
                    MaBarCodeSanPham = (string) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham]];
                    MaBarCodeSanPham = MaBarCodeSanPham.TrimEnd();
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet);
                }
                else
                {
                    TenSanPhamTiengViet = (string) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet]];
                    TenSanPhamTiengViet = TenSanPhamTiengViet.TrimEnd();
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh);
                }
                else
                {
                    TenSanPhamTiengAnh = (string) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh]];
                    TenSanPhamTiengAnh = TenSanPhamTiengAnh.TrimEnd();
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung);
                }
                else
                {
                    LopNhung = (string) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung]];
                    LopNhung = LopNhung.TrimEnd();
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung);
                }
                else
                {
                    TongLopNhung = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01);
                }
                else
                {
                    Zircon01 = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02);
                }
                else
                {
                    Zircon02 = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03);
                }
                else
                {
                    Zircon03 = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04);
                }
                else
                {
                    Zircon04 = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01);
                }
                else
                {
                    CatL01 = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02);
                }
                else
                {
                    CatL02 = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03);
                }
                else
                {
                    CatL03 = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04);
                }
                else
                {
                    CatL04 = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05);
                }
                else
                {
                    CatL05 = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06);
                }
                else
                {
                    CatL06 = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07);
                }
                else
                {
                    CatL07 = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08);
                }
                else
                {
                    CatL08 = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09);
                }
                else
                {
                    CatL09 = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09);
            }

            if (HasField(_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU], dr))
            {
                if (dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU]] == DBNull.Value)
                {
                    SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU);
                }
                else
                {
                    SIRU = (int) dr[_internalNameDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU]];
                    UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU);
                }
            }
            else
            {
                _isReadOnly = true;
                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU);
            }


            if (_concurrency != BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore)
            {
                _concurrencyArray = GetSerializedObject(this);
            }
        }

        /// <summary>
        /// Determines if the given field exists in the SqlDataReader.
        /// </summary>
        /// <param name="fieldName">The name of the field to search for.</param>
        /// <param name="reader">The SqlDataReader to search in.</param>
        /// <returns>Returns true if the field exists in the SqlDataReader, otherwise, returns false.</returns>
        protected bool HasField(string fieldName, MySqlDataReader reader)
        {
            for (int i = 0; i < reader.FieldCount; i++)
            {
                if (reader.GetName(i) == fieldName)
                    return true;
            }

            return false;
        }

        /// <summary>
        /// Determines if the given field exists in the DataRow.
        /// </summary>
        /// <param name="fieldName">The name of the field to search for.</param>
        /// <param name="row">The DataRow to search in.</param>
        /// <returns>Returns true if the field exists in the DataRow, otherwise, returns false.</returns>
        protected bool HasField(string fieldName, DataRow row)
        {
            return row.Table.Columns.Contains(fieldName);
        }

        /// <summary>
        /// Retrieves the specified fields from the row with the matching
        /// primary key from the database and stores them in the properties.
        /// </summary>
        /// <param name="id">The primary key of the row to pull.</param>
        /// <param name="fields">The fields to pull from the database.</param>
        protected void Get(string id, List<BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields> fields)
        {
            string strFields = "`" + LayerGenPrimaryKey + "`,";

            // If there are no fields, then pull all fields
            if (fields == null || fields.Count == 0)
            {
                strFields = "*";
            }
            else
            {
                foreach (BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields field in fields)
                {
                    strFields = strFields + "`" + _internalNameDictionary[field] + "`,";
                }
                strFields = strFields.TrimEnd(',');
            }

            string sql = "SELECT " + strFields + " FROM `" + LayerGenTableName + "` WHERE " + LayerGenPrimaryKey + "=@val1";


            using (MySqlConnection connection = new MySqlConnection(_connectionString))
            {
                using (MySqlCommand command = new MySqlCommand())
                {
                    connection.Open();
                    command.CommandType = _layerGenUseStoredProcedures ? CommandType.StoredProcedure : CommandType.Text;
                    command.CommandText = _layerGenUseStoredProcedures ? ("spBangnhapsolop_Select").Replace("@", "") : sql;
                    command.Connection = connection;
                    if (_layerGenUseStoredProcedures)
                    {
                        command.Parameters.AddWithValue("@id", id);
                        command.Parameters.AddWithValue("@fields", strFields);
                    }
                    else
                    {
                    command.Parameters.AddWithValue("@val1", id);
                    }

                    using (MySqlDataReader reader = command.ExecuteReader())
                    {
                        if (!reader.HasRows)
                            throw new BusinessLayer.Juki_giamsatthoigiankho.RowNotFoundException(LayerGenTableName + ": Could not find row with id of " + id);

                        while (reader.Read())
                        {
                            MaBarCodeSanPham = (string) reader["MaBarCodeSanPham"];
                            UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham);
                            if ((!HasField("TenSanPhamTiengViet", reader)) || reader.IsDBNull(reader.GetOrdinal("TenSanPhamTiengViet")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet);
                            }
                            else
                            {
                                TenSanPhamTiengViet = (string) reader["TenSanPhamTiengViet"];
                    TenSanPhamTiengViet = TenSanPhamTiengViet.TrimEnd();
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet);
                            }
                            if ((!HasField("TenSanPhamTiengAnh", reader)) || reader.IsDBNull(reader.GetOrdinal("TenSanPhamTiengAnh")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh);
                            }
                            else
                            {
                                TenSanPhamTiengAnh = (string) reader["TenSanPhamTiengAnh"];
                    TenSanPhamTiengAnh = TenSanPhamTiengAnh.TrimEnd();
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh);
                            }
                            if ((!HasField("LopNhung", reader)) || reader.IsDBNull(reader.GetOrdinal("LopNhung")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung);
                            }
                            else
                            {
                                LopNhung = (string) reader["LopNhung"];
                    LopNhung = LopNhung.TrimEnd();
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung);
                            }
                            if ((!HasField("TongLopNhung", reader)) || reader.IsDBNull(reader.GetOrdinal("TongLopNhung")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung);
                            }
                            else
                            {
                                TongLopNhung = (int) reader["TongLopNhung"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung);
                            }
                            if ((!HasField("Zircon01", reader)) || reader.IsDBNull(reader.GetOrdinal("Zircon01")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01);
                            }
                            else
                            {
                                Zircon01 = (int) reader["Zircon01"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01);
                            }
                            if ((!HasField("Zircon02", reader)) || reader.IsDBNull(reader.GetOrdinal("Zircon02")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02);
                            }
                            else
                            {
                                Zircon02 = (int) reader["Zircon02"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02);
                            }
                            if ((!HasField("Zircon03", reader)) || reader.IsDBNull(reader.GetOrdinal("Zircon03")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03);
                            }
                            else
                            {
                                Zircon03 = (int) reader["Zircon03"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03);
                            }
                            if ((!HasField("Zircon04", reader)) || reader.IsDBNull(reader.GetOrdinal("Zircon04")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04);
                            }
                            else
                            {
                                Zircon04 = (int) reader["Zircon04"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04);
                            }
                            if ((!HasField("CatL01", reader)) || reader.IsDBNull(reader.GetOrdinal("CatL01")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01);
                            }
                            else
                            {
                                CatL01 = (int) reader["CatL01"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01);
                            }
                            if ((!HasField("CatL02", reader)) || reader.IsDBNull(reader.GetOrdinal("CatL02")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02);
                            }
                            else
                            {
                                CatL02 = (int) reader["CatL02"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02);
                            }
                            if ((!HasField("CatL03", reader)) || reader.IsDBNull(reader.GetOrdinal("CatL03")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03);
                            }
                            else
                            {
                                CatL03 = (int) reader["CatL03"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03);
                            }
                            if ((!HasField("CatL04", reader)) || reader.IsDBNull(reader.GetOrdinal("CatL04")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04);
                            }
                            else
                            {
                                CatL04 = (int) reader["CatL04"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04);
                            }
                            if ((!HasField("CatL05", reader)) || reader.IsDBNull(reader.GetOrdinal("CatL05")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05);
                            }
                            else
                            {
                                CatL05 = (int) reader["CatL05"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05);
                            }
                            if ((!HasField("CatL06", reader)) || reader.IsDBNull(reader.GetOrdinal("CatL06")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06);
                            }
                            else
                            {
                                CatL06 = (int) reader["CatL06"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06);
                            }
                            if ((!HasField("CatL07", reader)) || reader.IsDBNull(reader.GetOrdinal("CatL07")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07);
                            }
                            else
                            {
                                CatL07 = (int) reader["CatL07"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07);
                            }
                            if ((!HasField("CatL08", reader)) || reader.IsDBNull(reader.GetOrdinal("CatL08")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08);
                            }
                            else
                            {
                                CatL08 = (int) reader["CatL08"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08);
                            }
                            if ((!HasField("CatL09", reader)) || reader.IsDBNull(reader.GetOrdinal("CatL09")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09);
                            }
                            else
                            {
                                CatL09 = (int) reader["CatL09"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09);
                            }
                            if ((!HasField("SIRU", reader)) || reader.IsDBNull(reader.GetOrdinal("SIRU")))
                            {
                                SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU);
                            }
                            else
                            {
                                SIRU = (int) reader["SIRU"];
                                UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU);
                            }

                        }
                        if (_concurrency != BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore)
                        {
                            _concurrencyArray = GetSerializedObject(this);
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Retrieves the row with the matching primary key from the
        /// database and stores them in the properties.
        /// </summary>
        /// <param name="id">The primary key of the row to pull.</param>
        private void Get(string id)
        {
            Get(id, null);
        }

        /// <summary>
        /// Unsets the value of the given field to null.
        /// </summary>
        /// <param name="field">The field to unset as null.</param>
        private void UnsetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields field)
        {
            _nullDictionary[field] = false;
        }

        /// <summary>
        /// Sets the value of the given field to null.
        /// </summary>
        /// <param name="field">The field to set as null.</param>
        public void SetNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields field)
        {
            _layerGenIsDirty = true;
            _nullDictionary[field] = true;
        }

        /// <summary>
        /// Determines if the given field is null or if it contains a value.
        /// </summary>
        /// <param name="field">The field to test for a null value.</param>
        /// <returns>True, if the field is null, otherwise, false.</returns>
        public bool IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields field)
        {
            return _nullDictionary[field];
        }

        /// <summary>
        /// Resets all properties to their default (null) value.
        /// </summary>
        private void ResetToDefault()
        {
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09] = true;
            _nullDictionary[BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU] = true;

            _oldPrimaryKeyValue = _maBarCodeSanPham;
        }

        /// <summary>
        /// Deletes this row from the database.
        /// </summary>
        public void Delete()
        {
            if (!_layerGenUseStoredProcedures)
            {
                string cmdString = "DELETE FROM `" + LayerGenTableName + "` WHERE `" + LayerGenPrimaryKey + "`='" + _maBarCodeSanPham + "'";

                using (MySqlConnection connection = new MySqlConnection(_connectionString))
                {
                    connection.Open();
                    using (MySqlCommand command = new MySqlCommand())
                    {
                        command.Connection = connection;
                        command.CommandType = CommandType.Text;
                        command.CommandText = cmdString;

                        command.ExecuteNonQuery();
                    }
                }
            }
            else
            {
                using (MySqlConnection connection = new MySqlConnection(_connectionString))
                {
                    connection.Open();
                    using (MySqlCommand command = new MySqlCommand())
                    {
                        command.Connection = connection;
                        command.CommandType = CommandType.StoredProcedure;
                        command.CommandText = ("spBangnhapsolop_Delete").Replace("@", "");
                        command.Parameters.AddWithValue("@val1", _maBarCodeSanPham);

                        command.ExecuteNonQuery();
                    }
                }
            }           
            ResetToDefault();
            _layerGenIsDirty = false;
            _layerGenIsUpdate = false;
        }

        /// <summary>
        /// Saves this row to the database. It will either do an INSERT or an UPDATE
        /// depending on whether this is a new row or an existing row.
        /// </summary>
        /// <exception cref="BusinessLayer.Juki_giamsatthoigiankho.ReadOnlyException">Thrown if only partial fields have loaded. If this is a force save, then this exception will not be thrown.</exception>
        /// <exception cref="BusinessLayer.Juki_giamsatthoigiankho.OutOfSyncException">Thrown if concurrency is set to strict and the row being saved is out of sync with the row in the database.</exception>
        public void Save()
        {
            Save(false);
        }

        /// <summary>
        /// Saves this row to the database. It will either do an INSERT or an UPDATE
        /// depending on whether this is a new row or an existing row. You can specify
        /// whether or not to force save this row. If only partial fields have been
        /// loaded, force saving will force the row to save. Keep in mind though that
        /// the fields that are not loaded will be overwritten with a null value.
        /// </summary>
        /// <param name="forceSave">True, if you want to force save the row.</param>
        /// <exception cref="BusinessLayer.Juki_giamsatthoigiankho.ReadOnlyException">Thrown if only partial fields have loaded. If this is a force save, then this exception will not be thrown.</exception>
        /// <exception cref="BusinessLayer.Juki_giamsatthoigiankho.OutOfSyncException">Thrown if concurrency is set to strict and the row being saved is out of sync with the row in the database.</exception>
        public void Save(bool forceSave)
        {
            MySqlParameter parameter;

            if (!_layerGenIsDirty)
            {
                return;
            }

            if (_isReadOnly && forceSave == false)
            {
                throw new BusinessLayer.Juki_giamsatthoigiankho.ReadOnlyException(LayerGenTableName + " is in a read-only state because only partial fields have been loaded!");
            }

            if (!_layerGenIsUpdate)
            {
                if (!_layerGenUseStoredProcedures)
                {
                    const string cmdString =
                        "INSERT INTO `" + LayerGenTableName + "` (" + LayerGenFieldNames + ") VALUES (" + LayerGenValueNames +
                        "); SELECT LAST_INSERT_ID();";

                    using (MySqlConnection connection = new MySqlConnection(_connectionString))
                    {
                        using (MySqlCommand command = new MySqlCommand())
                        {
                            command.Connection = connection;
                            command.CommandType = CommandType.Text;
                            command.CommandText = cmdString;
                        parameter = new MySqlParameter("@val1", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL01;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val2", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL02;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val3", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL03;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val4", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL04;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val5", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL05;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val6", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL06;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val7", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL07;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val8", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL08;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val9", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL09;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val10", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _lopNhung;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val11", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham))
                            parameter.Value = "";
                        else
                            parameter.Value = _maBarCodeSanPham;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val12", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _sIRU;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val13", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _tenSanPhamTiengAnh;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val14", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _tenSanPhamTiengViet;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val15", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _tongLopNhung;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val16", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon01;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val17", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon02;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val18", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon03;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val19", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon04;
                        command.Parameters.Add(parameter);

                            connection.Open();
                            object obj = command.ExecuteScalar();
                            
                            
                            _oldPrimaryKeyValue = _maBarCodeSanPham;
                            _layerGenIsUpdate = true;
                            _layerGenIsDirty = false;
							if (_concurrency != BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore)
                            {
                                _concurrencyArray = GetSerializedObject(this);
                            }
                        }
                    }
                }
                else
                {
                    using (MySqlConnection connection = new MySqlConnection(_connectionString))
                    {
                        using (MySqlCommand command = new MySqlCommand())
                        {
                            command.Connection = connection;
                            command.CommandType = CommandType.StoredProcedure;
                            command.CommandText = ("spBangnhapsolop_Insert").Replace("@", "");
                        parameter = new MySqlParameter("@val1", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL01;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val2", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL02;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val3", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL03;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val4", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL04;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val5", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL05;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val6", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL06;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val7", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL07;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val8", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL08;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val9", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL09;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val10", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _lopNhung;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val11", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham))
                            parameter.Value = "";
                        else
                            parameter.Value = _maBarCodeSanPham;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val12", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _sIRU;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val13", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _tenSanPhamTiengAnh;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val14", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _tenSanPhamTiengViet;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val15", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _tongLopNhung;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val16", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon01;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val17", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon02;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val18", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon03;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val19", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon04;
                        command.Parameters.Add(parameter);

                            connection.Open();
                            object obj = command.ExecuteScalar();
                            
                            
                            _oldPrimaryKeyValue = _maBarCodeSanPham;
                            _layerGenIsUpdate = true;
                            _layerGenIsDirty = false;
                            if (_concurrency != BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore)
                            {
                                _concurrencyArray = GetSerializedObject(this);
                            }
                        }
                    }
                }
            }
            else
            {
                if (!_layerGenUseStoredProcedures)
                {
                    const string cmdString = "UPDATE `" + LayerGenTableName + "` SET `CatL01`=@val1,`CatL02`=@val2,`CatL03`=@val3,`CatL04`=@val4,`CatL05`=@val5,`CatL06`=@val6,`CatL07`=@val7,`CatL08`=@val8,`CatL09`=@val9,`LopNhung`=@val10,`MaBarCodeSanPham`=@val11,`SIRU`=@val12,`TenSanPhamTiengAnh`=@val13,`TenSanPhamTiengViet`=@val14,`TongLopNhung`=@val15,`Zircon01`=@val16,`Zircon02`=@val17,`Zircon03`=@val18,`Zircon04`=@val19 WHERE " + LayerGenPrimaryKey + "=@val20";

                    using (MySqlConnection connection = new MySqlConnection(_connectionString))
                    {
                        using (MySqlCommand command = new MySqlCommand())
                        {
                            command.Connection = connection;
                            command.CommandType = CommandType.Text;
                            command.CommandText = cmdString;
                        parameter = new MySqlParameter("@val1", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL01;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val2", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL02;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val3", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL03;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val4", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL04;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val5", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL05;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val6", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL06;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val7", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL07;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val8", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL08;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val9", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL09;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val10", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _lopNhung;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val11", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham))
                            parameter.Value = "";
                        else
                            parameter.Value = _maBarCodeSanPham;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val12", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _sIRU;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val13", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _tenSanPhamTiengAnh;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val14", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _tenSanPhamTiengViet;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val15", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _tongLopNhung;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val16", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon01;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val17", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon02;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val18", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon03;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val19", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon04;
                        command.Parameters.Add(parameter);

                            command.Parameters.AddWithValue("@val20", _oldPrimaryKeyValue);

                            if (_concurrency != BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore)
                            {
                                if (!IsDataEqual())
                                {
                                    throw new BusinessLayer.Juki_giamsatthoigiankho.OutOfSyncException(LayerGenTableName + ": Row is out of sync with database! Changes not written to database!");
                                }
                            }

                            connection.Open();
                            command.ExecuteNonQuery();
                            _oldPrimaryKeyValue = _maBarCodeSanPham;
                            _layerGenIsUpdate = true;
                            _layerGenIsDirty = false;
                            if (_concurrency != BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore)
                            {
                                _concurrencyArray = GetSerializedObject(this);
                            }
                        }
                    }
                }
                else
                {
                    using (MySqlConnection connection = new MySqlConnection(_connectionString))
                    {
                        using (MySqlCommand command = new MySqlCommand())
                        {
                            command.Connection = connection;
                            command.CommandType = CommandType.StoredProcedure;
                            command.CommandText = ("spBangnhapsolop_Update").Replace("@", "");
                        parameter = new MySqlParameter("@val1", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL01))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL01;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val2", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL02))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL02;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val3", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL03))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL03;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val4", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL04))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL04;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val5", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL05))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL05;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val6", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL06))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL06;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val7", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL07))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL07;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val8", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL08))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL08;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val9", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.CatL09))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _catL09;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val10", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.LopNhung))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _lopNhung;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val11", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.MaBarCodeSanPham))
                            parameter.Value = "";
                        else
                            parameter.Value = _maBarCodeSanPham;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val12", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.SIRU))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _sIRU;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val13", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengAnh))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _tenSanPhamTiengAnh;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val14", MySqlDbType.VarChar);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TenSanPhamTiengViet))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _tenSanPhamTiengViet;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val15", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.TongLopNhung))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _tongLopNhung;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val16", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon01))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon01;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val17", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon02))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon02;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val18", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon03))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon03;
                        command.Parameters.Add(parameter);
                        parameter = new MySqlParameter("@val19", MySqlDbType.Int32);
                        if (IsNull(BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.Fields.Zircon04))
                            parameter.Value = DBNull.Value;
                        else
                            parameter.Value = _zircon04;
                        command.Parameters.Add(parameter);

                            command.Parameters.AddWithValue("@val20", _oldPrimaryKeyValue);

                            if (_concurrency != BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore)
                            {
                                if (!IsDataEqual())
                                {
                                    throw new BusinessLayer.Juki_giamsatthoigiankho.OutOfSyncException(LayerGenTableName + ": Row is out of sync with database! Changes not written to database!");
                                }
                            }

                            connection.Open();
                            command.ExecuteNonQuery();
                            _oldPrimaryKeyValue = _maBarCodeSanPham;
                            _layerGenIsUpdate = true;
                            _layerGenIsDirty = false;
                            if (_concurrency != BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop.ConcurrencyOptions.Ignore)
                            {
                                _concurrencyArray = GetSerializedObject(this);
                            }
                        }
                    }
                }
            }
        }



        /// <summary>
        /// Retrieves all rows and all fields from the Bangnhapsolop table.
        /// </summary>
        /// <returns>A <see cref="System.Data.DataTable" /> with all the data.</returns>
        internal static DataTable GetAll(bool useStoredProcedures)
        {
            if (!useStoredProcedures)
            {
                return GetBySqlStatement("SELECT * FROM `" + LayerGenTableName + "`");
            }

            using (MySqlConnection connection = new MySqlConnection(Universal.GetConnectionString()))
            {
                using (MySqlCommand command = new MySqlCommand())
                {
                    connection.Open();
                    command.CommandType = CommandType.StoredProcedure;
                    command.CommandText = ("spBangnhapsolop_GetAll").Replace("@", "");
                    command.Connection = connection;

                    using (MySqlDataAdapter adapter = new MySqlDataAdapter())
                    {
                        using (DataSet ds = new DataSet())
                        {
                            adapter.SelectCommand = command;
                            adapter.Fill(ds);

                            if (ds.Tables.Count > 0)
                            {
                                return ds.Tables[0];
                            }
                        }
                    }
                }
            }
            return null;
        }

        /// <summary>
        /// Retrieves all rows and all fields from the Bangnhapsolop table.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database</param>
        /// <returns>A <see cref="System.Data.DataTable" /> with all the data.</returns>
        internal static DataTable GetAll(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, bool useStoredProcedures)
        {
            if (!useStoredProcedures)
            {
                return GetBySqlStatement(connectionString, "SELECT * FROM `" + LayerGenTableName + "`");
            }

            using (MySqlConnection connection = new MySqlConnection(connectionString.ConnectionString))
            {
                using (MySqlCommand command = new MySqlCommand())
                {
                    connection.Open();
                    command.CommandType = CommandType.StoredProcedure;
                    command.CommandText = ("spBangnhapsolop_GetAll").Replace("@", "");
                    command.Connection = connection;

                    using (MySqlDataAdapter adapter = new MySqlDataAdapter())
                    {
                        using (DataSet ds = new DataSet())
                        {
                            adapter.SelectCommand = command;
                            adapter.Fill(ds);

                            if (ds.Tables.Count > 0)
                            {
                                return ds.Tables[0];
                            }
                        }
                    }
                }
            }
            return null;
        }

        /// <summary>
        /// Retrieves rows from the Bangnhapsolop table by executing the given stored procedure.
        /// </summary>
        /// <param name="procedureName">The name of the stored procedure to execute.</param>
        /// <param name="procedureParams">A dictionary of parameter/value pairs. This can be null if there are no parameters.</param>
        /// <returns>A <see cref="System.Data.DataTable" /> with all the data.</returns>
        internal static DataTable GetByStoredProcedure(string procedureName, Dictionary<string, object> procedureParams)
        {
            using (MySqlConnection connection = new MySqlConnection(Universal.GetConnectionString()))
            {
                using (MySqlCommand command = new MySqlCommand())
                {
                    command.Connection = connection;
                    command.CommandType = CommandType.StoredProcedure;
                    command.CommandText = procedureName;
                    if (procedureParams != null && procedureParams.Count > 0)
                    {
                        foreach (KeyValuePair<string, object> kvp in procedureParams)
                        {
                            command.Parameters.AddWithValue(kvp.Key, kvp.Value);
                        }
                    }

                    connection.Open();
                    using (MySqlDataAdapter adapter = new MySqlDataAdapter())
                    {
                        using (DataSet ds = new DataSet())
                        {
                            adapter.SelectCommand = command;
                            adapter.Fill(ds);

                            if (ds.Tables.Count > 0)
                            {
                                return ds.Tables[0];
                            }
                        }
                    }
                }
            }

            return null;
        }

        /// <summary>
        /// Retrieves rows from the Bangnhapsolop table by executing the given stored procedure.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database</param>
        /// <param name="procedureName">The name of the stored procedure to execute.</param>
        /// <param name="procedureParams">A dictionary of parameter/value pairs. This can be null if there are no parameters.</param>
        /// <returns>A <see cref="System.Data.DataTable" /> with all the data.</returns>
        internal static DataTable GetByStoredProcedure(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, string procedureName, Dictionary<string, object> procedureParams)
        {
            using (MySqlConnection connection = new MySqlConnection(connectionString.ConnectionString))
            {
                using (MySqlCommand command = new MySqlCommand())
                {
                    command.Connection = connection;
                    command.CommandType = CommandType.StoredProcedure;
                    command.CommandText = procedureName;
                    if (procedureParams != null && procedureParams.Count > 0)
                    {
                        foreach (KeyValuePair<string, object> kvp in procedureParams)
                        {
                            command.Parameters.AddWithValue(kvp.Key, kvp.Value);
                        }
                    }

                    connection.Open();
                    using (MySqlDataAdapter adapter = new MySqlDataAdapter())
                    {
                        using (DataSet ds = new DataSet())
                        {
                            adapter.SelectCommand = command;
                            adapter.Fill(ds);

                            if (ds.Tables.Count > 0)
                            {
                                return ds.Tables[0];
                            }
                        }
                    }
                }
            }

            return null;
        }

        /// <summary>
        /// Retrieves rows from the Bangnhapsolop table, based on the given SQL statement.
        /// </summary>
        /// <param name="sql">The SQL statement to execute.</param>
        /// <param name="sqlParams">Optional <see cref="System.String.Format"/> like parameters</param>
        /// <returns>A <see cref="System.Data.DataTable" /> with all the data.</returns>
        internal static DataTable GetBySqlStatement(string sql, params object[] sqlParams)
        {
            int paramNdx = 0;
            int valNdx = 1;
            Dictionary<string, string> paramValDictionary = new Dictionary<string, string>();

            foreach (object param in sqlParams)
            {
                if (param is string)
                {
                    sql = sql.Replace("'{" + paramNdx + "}'", "@val" + valNdx);
                    sql = sql.Replace("{" + paramNdx + "}", "@val" + valNdx);
                    paramValDictionary.Add("@val" + valNdx, (string)param);
                    valNdx++;
                }
                else
                {
                    sql = sql.Replace("{" + paramNdx + "}", param.ToString());
                }
                paramNdx++;
            }

            using (MySqlConnection connection = new MySqlConnection(Universal.GetConnectionString()))
            {
                using (MySqlCommand command = new MySqlCommand())
                {
                    command.Connection = connection;
                    command.CommandType = CommandType.Text;
                    command.CommandText = sql;

                    foreach (KeyValuePair<string, string> kvp in paramValDictionary)
                    {
                        command.Parameters.AddWithValue(kvp.Key, kvp.Value);
                    }

                    connection.Open();
                    using (MySqlDataAdapter adapter = new MySqlDataAdapter())
                    {
                        using (DataSet ds = new DataSet())
                        {
                            adapter.SelectCommand = command;
                            adapter.Fill(ds);

                            if (ds.Tables.Count > 0)
                            {
                                return ds.Tables[0];
                            }
                        }
                    }
                }
            }

            return null;
        }

        /// <summary>
        /// Retrieves rows from the Bangnhapsolop table, based on the given SQL statement.
        /// </summary>
        /// <param name="connectionString">Sets the connection string to use to connect to the database</param>
        /// <param name="sql">The SQL statement to execute.</param>
        /// <param name="sqlParams">Optional <see cref="System.String.Format"/> like parameters</param>
        /// <returns>A <see cref="System.Data.DataTable" /> with all the data.</returns>
        internal static DataTable GetBySqlStatement(BusinessLayer.Juki_giamsatthoigiankho.LayerGenConnectionString connectionString, string sql, params object[] sqlParams)
        {
            int paramNdx = 0;
            int valNdx = 1;
            Dictionary<string, string> paramValDictionary = new Dictionary<string, string>();

            foreach (object param in sqlParams)
            {
                if (param is string)
                {
                    sql = sql.Replace("'{" + paramNdx + "}'", "@val" + valNdx);
                    sql = sql.Replace("{" + paramNdx + "}", "@val" + valNdx);
                    paramValDictionary.Add("@val" + valNdx, (string)param);
                    valNdx++;
                }
                else
                {
                    sql = sql.Replace("{" + paramNdx + "}", param.ToString());
                }
                paramNdx++;
            }

            using (MySqlConnection connection = new MySqlConnection(connectionString.ConnectionString))
            {
                using (MySqlCommand command = new MySqlCommand())
                {
                    command.Connection = connection;
                    command.CommandType = CommandType.Text;
                    command.CommandText = sql;

                    foreach (KeyValuePair<string, string> kvp in paramValDictionary)
                    {
                        command.Parameters.AddWithValue(kvp.Key, kvp.Value);
                    }

                    connection.Open();
                    using (MySqlDataAdapter adapter = new MySqlDataAdapter())
                    {
                        using (DataSet ds = new DataSet())
                        {
                            adapter.SelectCommand = command;
                            adapter.Fill(ds);

                            if (ds.Tables.Count > 0)
                            {
                                return ds.Tables[0];
                            }
                        }
                    }
                }
            }

            return null;
        }

        private byte[] GetSerializedObject(Bangnhapsolop cls)
        {
            byte[] clsmaBarCodeSanPham = ObjectToByteArray(cls.MaBarCodeSanPham);
            byte[] clstenSanPhamTiengViet = ObjectToByteArray(cls.TenSanPhamTiengViet);
            byte[] clstenSanPhamTiengAnh = ObjectToByteArray(cls.TenSanPhamTiengAnh);
            byte[] clslopNhung = ObjectToByteArray(cls.LopNhung);
            byte[] clstongLopNhung = ObjectToByteArray(cls.TongLopNhung);
            byte[] clszircon01 = ObjectToByteArray(cls.Zircon01);
            byte[] clszircon02 = ObjectToByteArray(cls.Zircon02);
            byte[] clszircon03 = ObjectToByteArray(cls.Zircon03);
            byte[] clszircon04 = ObjectToByteArray(cls.Zircon04);
            byte[] clscatL01 = ObjectToByteArray(cls.CatL01);
            byte[] clscatL02 = ObjectToByteArray(cls.CatL02);
            byte[] clscatL03 = ObjectToByteArray(cls.CatL03);
            byte[] clscatL04 = ObjectToByteArray(cls.CatL04);
            byte[] clscatL05 = ObjectToByteArray(cls.CatL05);
            byte[] clscatL06 = ObjectToByteArray(cls.CatL06);
            byte[] clscatL07 = ObjectToByteArray(cls.CatL07);
            byte[] clscatL08 = ObjectToByteArray(cls.CatL08);
            byte[] clscatL09 = ObjectToByteArray(cls.CatL09);
            byte[] clssIRU = ObjectToByteArray(cls.SIRU);

            byte[] clsArray = new byte[clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length + clslopNhung.Length + 
                       clstongLopNhung.Length + clszircon01.Length + clszircon02.Length + clszircon03.Length + clszircon04.Length + clscatL01.Length + 
                       clscatL02.Length + clscatL03.Length + clscatL04.Length + clscatL05.Length + clscatL06.Length + clscatL07.Length + 
                       clscatL08.Length + clscatL09.Length + clssIRU.Length];
            Array.Copy(clsmaBarCodeSanPham, 0, clsArray, 0, clsmaBarCodeSanPham.Length);
            Array.Copy(clstenSanPhamTiengViet, 0, clsArray, 0 + clsmaBarCodeSanPham.Length, clstenSanPhamTiengViet.Length);
            Array.Copy(clstenSanPhamTiengAnh, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length, clstenSanPhamTiengAnh.Length);
            Array.Copy(clslopNhung, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                        , clslopNhung.Length);
            Array.Copy(clstongLopNhung, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length, clstongLopNhung.Length);
            Array.Copy(clszircon01, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length, clszircon01.Length);
            Array.Copy(clszircon02, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length + clszircon01.Length
                        , clszircon02.Length);
            Array.Copy(clszircon03, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length + clszircon01.Length
                         + clszircon02.Length, clszircon03.Length);
            Array.Copy(clszircon04, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length + clszircon01.Length
                         + clszircon02.Length + clszircon03.Length, clszircon04.Length);
            Array.Copy(clscatL01, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length + clszircon01.Length
                         + clszircon02.Length + clszircon03.Length + clszircon04.Length
                        , clscatL01.Length);
            Array.Copy(clscatL02, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length + clszircon01.Length
                         + clszircon02.Length + clszircon03.Length + clszircon04.Length
                         + clscatL01.Length, clscatL02.Length);
            Array.Copy(clscatL03, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length + clszircon01.Length
                         + clszircon02.Length + clszircon03.Length + clszircon04.Length
                         + clscatL01.Length + clscatL02.Length, clscatL03.Length);
            Array.Copy(clscatL04, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length + clszircon01.Length
                         + clszircon02.Length + clszircon03.Length + clszircon04.Length
                         + clscatL01.Length + clscatL02.Length + clscatL03.Length, clscatL04.Length);
            Array.Copy(clscatL05, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length + clszircon01.Length
                         + clszircon02.Length + clszircon03.Length + clszircon04.Length
                         + clscatL01.Length + clscatL02.Length + clscatL03.Length + clscatL04.Length
                        , clscatL05.Length);
            Array.Copy(clscatL06, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length + clszircon01.Length
                         + clszircon02.Length + clszircon03.Length + clszircon04.Length
                         + clscatL01.Length + clscatL02.Length + clscatL03.Length + clscatL04.Length
                         + clscatL05.Length, clscatL06.Length);
            Array.Copy(clscatL07, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length + clszircon01.Length
                         + clszircon02.Length + clszircon03.Length + clszircon04.Length
                         + clscatL01.Length + clscatL02.Length + clscatL03.Length + clscatL04.Length
                         + clscatL05.Length + clscatL06.Length, clscatL07.Length);
            Array.Copy(clscatL08, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length + clszircon01.Length
                         + clszircon02.Length + clszircon03.Length + clszircon04.Length
                         + clscatL01.Length + clscatL02.Length + clscatL03.Length + clscatL04.Length
                         + clscatL05.Length + clscatL06.Length + clscatL07.Length, clscatL08.Length);
            Array.Copy(clscatL09, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length + clszircon01.Length
                         + clszircon02.Length + clszircon03.Length + clszircon04.Length
                         + clscatL01.Length + clscatL02.Length + clscatL03.Length + clscatL04.Length
                         + clscatL05.Length + clscatL06.Length + clscatL07.Length + clscatL08.Length
                        , clscatL09.Length);
            Array.Copy(clssIRU, 0, clsArray, 0 + clsmaBarCodeSanPham.Length + clstenSanPhamTiengViet.Length + clstenSanPhamTiengAnh.Length
                         + clslopNhung.Length + clstongLopNhung.Length + clszircon01.Length
                         + clszircon02.Length + clszircon03.Length + clszircon04.Length
                         + clscatL01.Length + clscatL02.Length + clscatL03.Length + clscatL04.Length
                         + clscatL05.Length + clscatL06.Length + clscatL07.Length + clscatL08.Length
                         + clscatL09.Length, clssIRU.Length);

            return clsArray;

        }

        /// <summary>
        /// Determines of the current concurrency array is equal to what's in the database.
        /// </summary>
        /// <returns>True, if the data in memory is equal to whats in the database, otherwise false.</returns>
        protected bool IsDataEqual()
        {
            BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop obj = new BusinessLayer.Juki_giamsatthoigiankho.Bangnhapsolop(MaBarCodeSanPham);
            byte[] myArray = _concurrencyArray;
            byte[] clsArray = GetSerializedObject(obj);

            if (myArray.Length != clsArray.Length)
            {
                return false;
            }

            for (int i = 0; i < myArray.Length; i++)
            {
                if (myArray[i] != clsArray[i])
                {
                    return false;
                }
            }
            return true;
        }

        private byte[] ObjectToByteArray(object obj)
        {
            if (obj == null)
                return new byte[] {};

            if (obj is MySqlGeometry)
            {
                MySqlGeometry obj2 = (MySqlGeometry) obj;
                SimpleGeometry sg = new SimpleGeometry();
                sg.X = obj2.XCoordinate;
                sg.Y = obj2.YCoordinate;
                sg.Srid = obj2.SRID;
                sg.Value = obj2.Value;
                obj = sg;
            }

            BinaryFormatter bf = new BinaryFormatter();
            using (MemoryStream ms = new MemoryStream())
            {
                bf.Serialize(ms, obj);
                return ms.ToArray();
            }
        }

        [Serializable]
        private class SimpleGeometry
        {
            private double? _x;
            private double? _y;
            private byte[] _value;
            private int? _srid;

            public double? X {
                get { return _x; }
                set { _x = value; }
            }
            public double? Y {
                get { return _y; }
                set { _y = value; }
            }
            public byte[] Value {
                get { return _value; }
                set { _value = value; }
            }
            public int? Srid {
                get { return _srid; }
                set { _srid = value; }
            }
        }




    }
}



